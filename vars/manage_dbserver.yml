---
# This is a variable file for using manage_dbserver as a role.
#
# For details on user defined variables of each role,
# refer to README.md and roles/<role_name>/default/main.yml.
#
# Set PostgreSQL parameter. It just added or modified.
#pg_postgres_conf_params:
#  - name: listen_addresses
#    value: "*"
#
# Set PostgreSQL comma(,) seperated parameters.
#pg_multi_params
# - name: "shared_preload_libraries"
#   value: "btree_gist"
#   state: present
#
# Set host based authentication in $PGDATA/pg_hba.conf.
# After set on, PostgreSQL server reload.
#pg_hba_ip_addresses:
#  - contype: "host"
#    users: "all"
#    databases: "all"
#    method: "scram-sha-256"
#    source: "127.0.0.1/32"
#    state: present
#
# Create or Delete PostgreSQL replication slot.
#pg_slots:
#  - name: "physical_slot"
#    slot_type: "physical"
#    state: present
#  - name: "logical_slot"
#    slot_type: "logical"
#    output_plugin: "test_decoding"
#    state: present
#    database: "postgres"
#
# Create or Delete extension in Database.
# It must set target "database".
#pg_extensions:
#  - name: "postgis"
#    database: "postgres"
#    state: present
#
# Set specify privilieges or roles.
#pg_grant_privileges:
#  - roles: "postgres_role"
#    database: "postgres"
#    privileges: execute
#    schema: pg_catalog
#    objects: pg_current_wal_lsn(),pg_last_wal_replay_lsn(),pg_wal_replay_resume(),pg_wal_replay_pause()
#    type: function
#
#pg_grant_roles:
#  - role: pg_monitor
#    user: postgres_user
#
# Execute SQL queries or scripts.
# The "file_path" of pg_sql_scripts is path of the target servers.
# Therefore, files are copied to the target server via pg_copy_files.
#pg_sql_scripts:
#  - file_path: "/usr/postgres/sample.sql"
#    db: postgres
#
#pg_copy_files:
#  - file: "./test.sh"
#    remote_file: "/var/lib/postgres/test.sh"
#    owner: postgres
#    group: postgres
#    mode: 0700
#
#pg_query:
#  - query: "Update test set a=b"
#    db: postgres
#
# Add or Delete in pg_pass file(~/.pgpass)
#pg_pgpass_values:
#  - host: "127.0.0.1"
#    database: postgres
#    user: postgres_user
#    password: <password>
#    state: present
#
# "owner" refers to the owner of the database after creating the database.
# The user who creates the database is pg_owner (postgres).
# If not set, it is set to pg_owner(postgres).
#pg_databases:
#  - name: another_postgres
#    owner: postgres
#    encoding: UTF-8
#
# Create or Delete tablespace.
#pg_tablespaces:
#  - name: index_tablespace
#    owner: postgres
#    location: "/data/index_tablespace"
#    state: present